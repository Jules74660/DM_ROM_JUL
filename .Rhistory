sd_HT_sss<- rep(0,nsimul) # on crée un vecteur vide qui prendra les valeurs de HT pour chaque simulation
for (i in 1:nsimul){
sd_HT_sss[i] <- sqrt(varHT(res_sss[[i]][,3], pikl, 1))
i<-i+1
}
boxplot(sd_HT_sss)
boxplot(HT_tot, main = "Comparaison des HT")
HT_tot<-cbind(HT_srs,HT_sss, HT_grts)
boxplot(HT_tot, main = "Comparaison des HT")
abline(h = sum(z), col = "red")
sd_HT_tot<-cbind(sd_HT_srs,sd_HT_sss, sd_HT_grts)
boxplot(HT_tot, main = "Comparaison des sd HT")
abline(h = sum(z), col = "red")
HT_tot<-cbind(HT_srs,HT_sss, HT_grts)
boxplot(HT_tot, main = "Comparaison des HT")
abline(h = sum(z), col = "red")
sd_HT_tot<-cbind(sd_HT_srs,sd_HT_sss, sd_HT_grts)
boxplot(sd_HT_tot, main = "Comparaison des sd HT")
abline(h = sum(z), col = "red")
#Grille de 50 x 50 cases
side=50
my.mat <- matrix(NA, nrow=side, ncol=side)
x.coord <- rep(1:side, each=side)
y.coord <- rep(1:side, times=side)
xy <- data.frame(x.coord, y.coord)
#On cr?e une variable r?ponse N(100,5), pour pas avoir de valeurs n?gatives
z<-data.frame(z1 = rnorm(length(xy[,1]),100,5))
population<-SpatialPointsDataFrame(xy,z)
population<-st_as_sf(population)
ggplot(population) +
geom_sf(aes(color = z))
plot(population)
res_srs <-rep(list(),nsimul) # on crée une liste vide où on va mettre les résultats des 500 simulations
for (i in 1:nsimul){
SRSpts <- spsurvey::irs(population, n_base = pts, projcrs_check = FALSE)
res_srs[i] <-list(cbind(SRSpts$sites_base$X,SRSpts$sites_base$Y,SRSpts$sites_base$z))
i<-i+1
}
head(res_srs)
head(res_srs)
sample<-res_srs[[2]]# on en prend un au hasard
sample<-res_srs[[2]]# on en prend un au hasard
sample_exemple <- SpatialPointsDataFrame(sample[,1:2],as.data.frame(sample[,3]))
plot(sample_exemple, pch = 16)
sample<-res_srs[[2]]# on en prend un au hasard
sample_exemple <- SpatialPointsDataFrame(sample[,1:2],as.data.frame(sample[,3]))
sample_exemple<-st_as_sf(sample_exemple)
plot(sample_exemple, pch = 16)
unlink("~/Documents/COURS/M2_DYNEA/Sampling/TDs/TD-2 Horvitz-Thompson/Rmarkdown_cache", recursive = TRUE)
cov = CovarianceFunction(2, Exponential(.5))
pts = range(0, stop=1, length=1001)
grf = GaussianRandomField(cov, CirculantEmbedding(), pts, pts, minpadding=2001)
heatmap(grf)
install.packages("RandomFieldsUtils")
RFfractaldim(data=xy)
library(RandomFieldsUtils)
RFfractaldim(data=xy)
library(RandomFields)
install.packages(RandomFields)
pacman::p_load(tidyverse, spsurvey, maptools, cartography, readxl, viridisLite)
getwd()
Chemin <- "/Users/jules/Desktop/Master/M2/strategie_echantillonage/DM_ROM_JUL"
setwd(Chemin)
getwd() # si on ouvre avec le r.proj on devrait avoir le bon chemin sinon on copie colle le résultat
rivieres<-sf::st_read("bassin versant nive.shp")
plot(st_geometry(rivieres), col = "black", border = "grey")
plot(st_geometry(rivieres), col = "black", border = "grey")
layoutLayer(title = "Rivières d'étude",
sources = "Sources: ",
author = "Claire Kermorvant",
frame = FALSE, north = FALSE, tabtitle = TRUE,
scale = "auto")
# north arrow
north(pos = "topleft", col = "red")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
rivieres<-sf::st_read("bassin versant nive.shp")
plot(st_geometry(rivieres), col = "black", border = "grey")
# layout
layoutLayer(title = "Rivières d'étude",
sources = "Sources: ",
author = "Claire Kermorvant",
frame = FALSE, north = FALSE, tabtitle = TRUE,
scale = "auto")
# north arrow
north(pos = "topleft", col = "red")
srs <-spsurvey::irs(rivieres, n_base = 20, projcrs_check = FALSE)
par(mfrow = c(1,2))
# plot 1
plot(st_geometry(rivieres), col = "black", border = NA, bg = "lightblue1")
typoLayer(
x = srs$sites_base,
var = "siteuse",
col = "red",
lwd = .7,
add = TRUE,
legend.pos = "n"
)
layoutLayer(title = "Sites à visiter",
sources = "",
author = "Claire Kermorvant",
north = FALSE, tabtitle = TRUE, postitle = "right",
col = "white", coltitle = "black")
north(pos = "topleft") # north arrow
# plot 2
plot(st_geometry(rivieres), col = "black", border = NA, bg = "lightblue1")
labelLayer(x = srs$sites_base, txt = "siteID",
cex = 0.8, halo = TRUE, r = 0.1)
layoutLayer(title = "Sites à visiter",
sources = "",
author = "Claire Kermorvant",
north = FALSE, tabtitle = TRUE, postitle = "right",
col = "white", coltitle = "black")
north(pos = "topleft") # north arrow
write.csv(srs$sites_base,"SRS.csv")
grts<-spsurvey::grts(rivieres, n_base = 20, projcrs_check = FALSE)
par(mfrow = c(1,2))
# plot 1
plot(st_geometry(rivieres), col = "black", border = NA, bg = "lightblue1")
typoLayer(
x = grts$sites_base,
var = "siteuse",
col = "red",
lwd = .7,
add = TRUE,
legend.pos = "n"
)
layoutLayer(title = "Sites à visiter",
sources = "",
author = "Claire Kermorvant",
north = FALSE, tabtitle = TRUE, postitle = "right",
col = "white", coltitle = "black")
north(pos = "topleft") # north arrow
# carte 2
plot(st_geometry(rivieres), col = "black", border = NA, bg = "lightblue1")
labelLayer(x = grts$sites_base, txt = "siteID",
cex = 0.8, halo = TRUE, r = 0.1)
layoutLayer(title = "Sites à visiter",
sources = "",
author = "Claire Kermorvant",
north = FALSE, tabtitle = TRUE, postitle = "right",
col = "white", coltitle = "black")
north(pos = "topleft")# north arrow
grts<-spsurvey::grts(rivieres, n_base = 20, n_over = 5, projcrs_check = FALSE)
par(mfrow = c(1,2))
# plot 1
plot(st_geometry(rivieres), col = "black", border = NA, bg = "lightblue1")
typoLayer(
x = grts$sites_base,
var = "siteuse",
col = "black",
lwd = .7,
add = TRUE,
legend.pos = "n"
)
typoLayer(
x = grts$sites_over,
var = "siteuse",
col = "red",
lwd = .7,
add = TRUE,
legend.pos = "n"
)
layoutLayer(title = "Sites à visiter",
sources = "",
author = "Claire Kermorvant",
north = FALSE, tabtitle = TRUE, postitle = "right",
col = "white", coltitle = "black")
north(pos = "topleft") # north arrow
# carte 2
plot(st_geometry(rivieres), col = "black", border = NA, bg = "lightblue1")
labelLayer(x = grts$sites_base, txt = "siteID",
cex = 0.8, halo = TRUE, r = 0.1)
labelLayer(x = grts$sites_over, txt = "siteID",
cex = 0.8, halo = TRUE, r = 0.1, col = "red")
layoutLayer(title = "Sites à visiter",
sources = "",
author = "Claire Kermorvant",
north = FALSE, tabtitle = TRUE, postitle = "right",
col = "white", coltitle = "black")
north(pos = "topleft")# north arrow
write.csv(grts$sites_base,"File Name.csv")
download.file('http://www.donnees.statistiques.developpement-durable.gouv.fr/donneesCLC/CLC/region/CLC_D971_UTM_SHP.zip', destfile = 'CLC')
unzip('CLC')
couv <- readShapeSpatial("CLC_D971_UTM_SHP.shp")
?readShapeSpatial
couv <- st_read("CLC_D971_UTM_SHP.shp")
shiny::runApp('~/Documents/GitHub/stage2025_jroes/R/02_strategie_lacs/06_app_lacs/RNTPE_typologies')
couv <- st_read("CLC_D971_UTM_SHP.shp")
couv <- read.xls("CLC_D971_UTM_SHP/CLC_nomenclature.xls")
install.packages("readxl")
readxl::read_excel("CLC_D971_UTM_SHP/CLC_nomenclature.xls")
nomenclature <- readxl::read_excel("CLC_D971_UTM_SHP/CLC_nomenclature.xls")
couv <- maptools::readShapeSpatial("CLC00_D971_UTM.shp")
ridisLite)
pacman::p_load(tidyverse, spsurvey, maptools, cartography, readxl, viridisLite)
install.packages("maptools")
couv <- st_read("CLC00_D971_UTM.shp")
couv <- st_read("CLC00_D971_UTM.shp")
couv <- st_read("CLC_D971_UTM_SHP/CLC00/CLC00_D971_UTM.shp")
View(couv)
View(couv)
View(nomenclature)
View(couv)
couvtest <- st_read("CLC_D971_UTM_SHP/CLC06/CHA06_D971_UTM.shp")
View(couvtest)
ggplot() +
geom_sf(data = couv, fill = "grey90", color = "white", size = 0.2)
ggplot() +
geom_sf(data = couv, fill = "grey90", color = "black", size = 0.2)
View(couv)
View(couv)
couv %>% mutate(code_CLC = round(CODE_00,1)
couv %>% mutate(code_CLC = round(CODE_00,1))
couv %>% mutate(code_CLC = round(CODE_00,1))
couv %>%
mutate(code_CLC = substr(as.character(CODE_00), 1, 1))
couv <- couv %>%
mutate(code_CLC = substr(as.character(CODE_00), 1, 1))
couv <- left_join(couv, nomenclature, by = c("code_CLC" = "Code CLC"))
?st_read
colnames(nomenclature)
couv <- left_join(couv, nomenclature, by = c("code_CLC" = "code_clc_niveau_1"))
View(couv)
View(couv)
plot(st_geometry(couv), col = viridisLite::viridis(length(unique(couv$libelle_clc_niveau_1)))[as.numeric(as.factor(couv$libelle_clc_niveau_1))], border = NA)
ggplot() +
geom_sf(data = couv, aes(fill = libelle_clc_niveau_1), color = NA) +
scale_fill_viridis_d(option = "D", name = "Type de couverture des sols") +
theme_minimal() +
labs(title = "Couverture des sols en Guadeloupe",
subtitle = "Données Corine Land Cover 2000",
caption = "Source : data.gouv.fr") +
theme(legend.position = "bottom")
ggplot() +
geom_sf(data = couv, aes(fill = code_clc_niveau_1), color = NA) +
scale_fill_viridis_d(option = "D", name = "Type de couverture des sols") +
theme_minimal() +
labs(title = "Couverture des sols en Guadeloupe",
subtitle = "Données Corine Land Cover 2000",
caption = "Source : data.gouv.fr") +
theme(legend.position = "bottom")
View(couv)
ggplot() +
geom_sf(data = couv, aes(fill = code_clc_niveau_1), color = NA) +
scale_fill_viridis_d(option = "D", name = "Type de couverture des sols") +
theme_minimal() +
labs(title = "Couverture des sols en Guadeloupe",
subtitle = "Données Corine Land Cover 2000",
caption = "Source : data.gouv.fr") +
theme(legend.position = "bottom")
ggplot() +
geom_sf(data = couv, aes(fill = code_CLC), color = NA) +
scale_fill_viridis_d(option = "D", name = "Type de couverture des sols") +
theme_minimal() +
labs(title = "Couverture des sols en Guadeloupe",
subtitle = "Données Corine Land Cover 2000",
caption = "Source : data.gouv.fr") +
theme(legend.position = "bottom")
couv2006 <- st_read("CLC_D971_UTM_SHP/CLC06/CLC06_D971_UTM.shp")
couv2012 <- st_read("CLC_D971_UTM_SHP/CLC12/CLC12_D971_UTM.shp")
couv2000 <- couv2000 %>%
mutate(code_CLC = substr(as.character(CODE_00), 1, 1))
couv2006 <- couv2006 %>%
mutate(code_CLC = substr(as.character(CODE_00), 1, 1))
nomenclature <- readxl::read_excel("CLC_D971_UTM_SHP/CLC_nomenclature.xls")
couv2000 <- st_read("CLC_D971_UTM_SHP/CLC00/CLC00_D971_UTM.shp")
couv2006 <- st_read("CLC_D971_UTM_SHP/CLC06/CLC06_D971_UTM.shp")
couv2012 <- st_read("CLC_D971_UTM_SHP/CLC12/CLC12_D971_UTM.shp")
couv2000 <- couv2000 %>%
mutate(code_CLC = substr(as.character(CODE_00), 1, 1))
couv2006 <- couv2006 %>%
mutate(code_CLC = substr(as.character(CODE_00), 1, 1))
couv2006 <- st_read("CLC_D971_UTM_SHP/CLC06/CLC06_D971_UTM.shp")
couv2006 <- couv2006 %>%
mutate(code_CLC = substr(as.character(CODE_00), 1, 1))
couv2006
couv2006 <- couv2006 %>%
mutate(code_CLC = substr(as.character(CODE_06), 1, 1))
couv2012
couv2012 <- couv2012 %>%
mutate(code_CLC = substr(as.character(CODE_12), 1, 1))
couv2000 <- left_join(couv2000, nomenclature, by = c("code_CLC" = "code_clc_niveau_1"))
couv2006 <- left_join(couv2006, nomenclature, by = c("code_CLC" = "code_clc_niveau_1"))
couv2012 <- left_join(couv2012, nomenclature, by = c("code_CLC" = "code_clc_niveau_1"))
ggplot() +
geom_sf(data = couv2000, aes(fill = code_CLC), color = NA) +
scale_fill_viridis_d(option = "D", name = "Type de couverture des sols") +
theme_minimal() +
labs(title = "Couverture des sols en Guadeloupe",
subtitle = "Données Corine Land Cover 2000",
caption = "Source : data.gouv.fr") +
theme(legend.position = "bottom")
getwd() # si on ouvre avec le r.proj on devrait avoir le bon chemin sinon on copie colle le résultat
Chemin <- "/Users/jules/Desktop/Master/M2/strategie_echantillonage/DM_ROM_JUL"
setwd(Chemin)
couv2000 <- couv2000 %>%
filter(AREA_00 > 500 & code_CLC != "5")
View(couv2000)
couv2000 <- couv2000 %>%
filter(AREA_HA > 500 & code_CLC != "5")
couv2000
unique(couv2000$code_CLC))
unique(couv2000$code_CLC)
couv2000 <- st_read("CLC_D971_UTM_SHP/CLC00/CLC00_D971_UTM.shp")
couv2000 <- couv2000 %>%
mutate(code_CLC = substr(as.character(CODE_00), 1, 1))
unique(couv2000$code_CLC)
couv2000 <- left_join(couv2000, nomenclature, by = c("code_CLC" = "code_clc_niveau_1"))
unique(couv2000)
unique(couv2000$libelle_fr)
nomenclature <- readxl::read_excel("CLC_D971_UTM_SHP/CLC_nomenclature.xls")
couv2000 <- st_read("CLC_D971_UTM_SHP/CLC00/CLC00_D971_UTM.shp")
couv2006 <- st_read("CLC_D971_UTM_SHP/CLC06/CLC06_D971_UTM.shp")
couv2012 <- st_read("CLC_D971_UTM_SHP/CLC12/CLC12_D971_UTM.shp")
couv2000 <- couv2000 %>%
mutate(code_CLC = substr(as.character(CODE_00), 1, 1))
couv2006 <- couv2006 %>%
mutate(code_CLC = substr(as.character(CODE_06), 1, 1))
couv2012 <- couv2012 %>%
mutate(code_CLC = substr(as.character(CODE_12), 1, 1))
unique(couv2000$code_CLC)
couv2000 <- couv2000 %>%
filter(code_CLC != "5")
unique(couv2000$code_CLC)
couv2000 <- couv2000 %>%
filter(AREA_HA > 500 & code_CLC != "5")
unique(couv2000$code_CLC)
couv2000 <- couv2000 %>%
filter(AREA_HA > 500 & code_CLC != "5")
couv2006 <- couv2006 %>%
filter(AREA_HA > 500 & code_CLC != "5")
couv2012 <- couv2012 %>%
filter(AREA_HA > 500 & code_CLC != "5")
ggplot() +
geom_sf(data = couv2000, aes(fill = code_CLC), color = NA) +
scale_fill_viridis_d(option = "D", name = "Type de couverture des sols") +
theme_minimal() +
labs(title = "Couverture des sols en Guadeloupe",
subtitle = "Données Corine Land Cover 2000",
caption = "Source : data.gouv.fr") +
theme(legend.position = "bottom")
ggplot() +
geom_sf(data = couv2000, fill = "grey", color = NA) +
geom_sf(data = couv2000, aes(fill = code_CLC), color = NA) +
scale_fill_viridis_d(option = "D", name = "Type de couverture des sols") +
theme_minimal() +
labs(title = "Couverture des sols en Guadeloupe",
subtitle = "Données Corine Land Cover 2000",
caption = "Source : data.gouv.fr") +
theme(legend.position = "bottom")
ggplot() +
geom_sf(data = couv2000, fill = "grey") +
geom_sf(data = couv2000, aes(fill = code_CLC), color = NA) +
scale_fill_viridis_d(option = "D", name = "Type de couverture des sols") +
theme_minimal() +
labs(title = "Couverture des sols en Guadeloupe",
subtitle = "Données Corine Land Cover 2000",
caption = "Source : data.gouv.fr") +
theme(legend.position = "bottom")
ggplot() +
geom_sf(data = couv2000, fill = "grey", color = "red") +
geom_sf(data = couv2000, aes(fill = code_CLC), color = NA) +
scale_fill_viridis_d(option = "D", name = "Type de couverture des sols") +
theme_minimal() +
labs(title = "Couverture des sols en Guadeloupe",
subtitle = "Données Corine Land Cover 2000",
caption = "Source : data.gouv.fr") +
theme(legend.position = "bottom")
ggplot() +
geom_sf(data = couv2000, fill = "grey", color = "red") +
geom_sf(data = couv2000, aes(fill = code_CLC), color = NA) +
scale_fill_viridis_d(option = "D", name = "Type de couverture des sols") +
theme_minimal() +
labs(title = "Couverture des sols en Guadeloupe",
subtitle = "Données Corine Land Cover 2000",
caption = "Source : data.gouv.fr") +
theme(legend.position = "bottom")
runApp('~/Documents/GitHub/stage2025_jroes/R/02_strategie_lacs/06_app_lacs/RNTPE_typologies')
?grts
grtstest <- spsurvey::grts(couv2000, n_base = 10)
grts <- spsurvey::grts(couv2000, n_base = 10)
par(mfrow = c(1,2))
plot(st_geometry(rivieres), col = "black", border = NA, bg = "lightblue1")
typoLayer(
x = grts$sites_base,
var = "siteuse",
col = "red",
lwd = .7,
add = TRUE,
legend.pos = "n"
)
plot(st_geometry(grts), col = "black", border = NA, bg = "lightblue1")
typoLayer(
x = grts$sites_base,
var = "siteuse",
col = "red",
lwd = .7,
add = TRUE,
legend.pos = "n"
)
layoutLayer(title = "Sites à visiter",
sources = "",
author = "Claire Kermorvant",
north = FALSE, tabtitle = TRUE, postitle = "right",
col = "white", coltitle = "black")
north(pos = "topleft") # north arrow
grts <- spsurvey::grts(couv2000, n_base = 10)
typoLayer(
x = grts$sites_base,
var = "siteuse",
col = "red",
lwd = .7,
add = TRUE,
legend.pos = "n"
)
layoutLayer(title = "Sites à visiter",
sources = "",
author = "Claire Kermorvant",
north = FALSE, tabtitle = TRUE, postitle = "right",
col = "white", coltitle = "black")
north(pos = "topleft") # north arrow
typoLayer(
x = grts$sites_base,
var = "siteuse",
col = "red",
lwd = .7,
add = TRUE,
legend.pos = "n"
)
grts <- spsurvey::grts(couv2000, n_base = 10)
typoLayer(
x = grts$sites_base,
var = "siteuse",
col = "red",
lwd = .7,
add = TRUE,
legend.pos = "n"
)
layoutLayer(title = "Sites à visiter",
sources = "",
author = "Claire Kermorvant",
north = FALSE, tabtitle = TRUE, postitle = "right",
col = "white", coltitle = "black")
north(pos = "topleft") # north arrow
plot(st_geometry(rivieres), col = "black", border = NA, bg = "lightblue1")
plot(st_geometry(couv2000), col = "lightgrey", main = "Plan d'échantillonnage GRTS")
1+1
clc
couv2000
nomenclature <- readxl::read_excel("CLC_D971_UTM_SHP/CLC_nomenclature.xls")
couv2000 <- st_read("CLC_D971_UTM_SHP/CLC00/CLC00_D971_UTM.shp")
couv2006 <- st_read("CLC_D971_UTM_SHP/CLC06/CLC06_D971_UTM.shp")
couv2012 <- st_read("CLC_D971_UTM_SHP/CLC12/CLC12_D971_UTM.shp")
couv2000 <- couv2000 %>%
mutate(code_CLC = substr(as.character(CODE_00), 1, 1))
couv2006 <- couv2006 %>%
mutate(code_CLC = substr(as.character(CODE_06), 1, 1))
couv2012 <- couv2012 %>%
mutate(code_CLC = substr(as.character(CODE_12), 1, 1))
couv2000 <- left_join(couv2000, nomenclature, by = c("code_CLC" = "code_clc_niveau_1"))
couv2006 <- left_join(couv2006, nomenclature, by = c("code_CLC" = "code_clc_niveau_1"))
couv2012 <- left_join(couv2012, nomenclature, by = c("code_CLC" = "code_clc_niveau_1"))
couv2000 <- couv2000 %>%
filter(AREA_HA > 500 & code_CLC != "5")
couv2006 <- couv2006 %>%
filter(AREA_HA > 500 & code_CLC != "5")
couv2012 <- couv2012 %>%
filter(AREA_HA > 500 & code_CLC != "5")
ech <- grts(design = data.frame(stratum = unique(couv2000$libelle_fr), panel="Main", seltype="Equal", n=10),
type.frame="area", src.frame="sf.object", sf.object=couv2000, stratum=couv2000$libelle_fr)
# Définition du plan d'échantillonnage
design <- list(
"strat1" = list(panel = c(Main = 10), seltype = "Equal")
)
# Exécution du GRTS sur un objet sf
ech <- grts(
design = design,
DesignID = "MyDesign",
type.frame = "area",
src.frame = "sf.object",
sf.object = couv2000,
stratum = "libelle_fr"
)
design
View(design)
# Exécution du GRTS sur un objet sf
ech <- grts(
type.frame = "area",
src.frame = "sf.object",
sf.object = couv2000,
stratum = "libelle_fr")
Shape <- couv2000
nb<- 10                          # d?finir le nombre d'?chantillons voulus
over.n<-10                      # d?finir le nombre d'?chantillons suppl?mentaires voulus
samples<-grts.point(Shape, nb, over.n)
Shape <- couv2000
nb<- 10
over.n<-10
samples<-grts.point(Shape, nb, over.n)
?grts.point
?survey::grts.point
library(spsurvey)
samples<-spsurvey::grts.point(Shape, nb, over.n)
ggplot() +
geom_sf(data = couv2012, fill = "grey", color = "red") +
geom_sf(data = couv2012, aes(fill = code_CLC), color = NA) +
scale_fill_viridis_d(option = "D", name = "Type de couverture des sols") +
theme_minimal() +
labs(title = "Couverture des sols en Guadeloupe",
subtitle = "Données Corine Land Cover 2000",
caption = "Source : data.gouv.fr") +
theme(legend.position = "bottom")
